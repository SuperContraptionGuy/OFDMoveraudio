
to generate a signal and save it to a file
    ./qam filenameNoExtension
generates a file called filenameNoExtension.wav with the audio that plays

qamDecoder takes samples directly from stdin, so arecord can pull samples from the microphone like this
    ./qam filename; arecord -c 1 -r 44100 -f S32_LE | ./qamDecoder

This helps cut out the first second of audio while alsa actually prepares the mic amplifier
    arecord -r 44100 -c 1 -f S32_LE -d 1 > /dev/null; ./qam test & arecord -c 1 -r 44100 -f S32_LE | ./qamDecoder
    arecord -r 44100 -c 1 -f S32_LE -d 1 > /dev/null; ../build/qam test & arecord -c 1 -r 44100 -f S32_LE | ../build/qamDecoder

or, you can pipe samples directly stdout | stdin if you pass '-' as the filename to qam
    ./qam - | ./qamDecoder


You could playback a wav file generated by qam, shoving the samples directly to qamDecoder using ffmpeg to read the file
    ffmpeg -i 16QAM.wav -c copy -f s32le pipe:1 | ../build/qamDecoder
you can adjust the gain for raw files so it doesn't overwhelm the reciever
    ffmpeg -i test.wav -filter:a "volume=0.25" -f s32le pipe:1 | ../build/qamDecoder

or record a sound from speaker -> microphone for later playback using the above command
    ./qam bpsk_window32 & arecord -c 1 -r 44100 -f S32_LE bpsk_window32_recorded.wav

compare the synthesized signal to the one picked up on the microphone
    arecord -c 1 -r 44100 -f S32_LE -d 1 /dev/null; ./qam synthesizedSignal & arecord -c 1 -r 44100 -f S32_LE -d 2 recorededSignal.wav

record both the original synthesized waveform and the recorded resulting waveform along with running the decoder on it
    arecord -r 44100 -c 1 -f S32_LE -d 1 > /dev/null; ../build/qam synthesizedSignal_multiModulation_60s & arecord -c 1 -r 44100 -f S32_LE -d 60 recordedSignal_multiModulation_60s.wav;


audacity is a great program to sanity check the waveforms and recordings.


Big problem I just figured out was that the gain on my microphone was way too high, and it's not adjusted automatically, I have to manually adjust it with
    wpctl set-volume ## 0.25
to something that matches the environment. Not sure how to automate that yet
But the performance is much better with the mic gain lower. The waveforms don't clip nearly as much.

