
to generate a signal and save it to a file
    ./qam filenameNoExtension
generates a file called filenameNoExtension.wav with the audio that plays

qamDecoder takes samples directly from stdin, so arecord can pull samples from the microphone like this
    ./qam filename; arecord -c 1 -r 44100 -f S32_LE | ./qamDecoder

This helps cut out the first second of audio while alsa actually prepares the mic amplifier
    arecord -r 44100 -c 1 -f S32_LE -d 1 > /dev/null; ./qam test & arecord -c 1 -r 44100 -f S32_LE | ./qamDecoder

or, you can pipe samples directly stdout | stdin if you pass '-' as the filename to qam
    ./qam - | ./qamDecoder


You could playback a wav file generated by qam, shoving the samples directly to qamDecoder using ffmpeg to read the file
    ffmpeg -i 16QAM.wav -c copy -f s32le pipe:1 | ./qamDecoder

or record a sound from speaker -> microphone for later playback using the above command
    ./qam bpsk_window32 & arecord -c 1 -r 44100 -f S32_LE bpsk_window32_recorded.wav


audacity is a great program to sanity check the waveforms and recordings.
